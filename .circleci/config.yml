version: 2.1

executors:
  default:
    working_directory: ~/repo
    description: The official CircleCI Ruby Docker image
    docker:
      - image: cimg/ruby:3.1.2-node
        environment:
          RAILS_ENV: test
          DATABASE_URL: postgresql://$PG_USER:$PG_PASSWORD@$PG_HOST:$PG_PORT/$PG_DB
      - image: circleci/postgres:11.3-alpine
        environment:
          POSTGRES_USER: $PG_USER
          POSTGRES_DB: $PG_DB
          POSTGRES_PASSWORD: $PG_PASSWORD

caches:
  - &bundle_cache_full v2-repo-{{ checksum "Gemfile.lock" }}
  - &bundle_cache v2-repo-

environment:
  DB_USERNAME: postgres
  DB_PASSWORD: postgres
  DB_NAME: postgres
  DB_HOST: 127.0.0.1
  PG_USER: myapp
  PG_PASSWORD: myapp
  PG_DB: car_advertisements_web_test
  PG_HOST: localhost
  PG_PORT: 5432

commands:
  setup_environment:
    steps:
      - checkout
      - restore_cache:
          keys:
            - *bundle_cache_full
            - *bundle_cache
      - run:
          name: install required gems
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install
      - save_cache:
          key: *bundle_cache_full
          paths:
            - vendor/bundle
      - run:
          name: Set up DB
          command: |
            bundle exec rails db:create
            bundle exec rails db:schema:load
            bundle exec rails db:migrate


  run_specs:
    steps:
      - run:
          name: run specs
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                              --out /tmp/test-results/rspec.xml \
                              $TEST_FILES
      - store_artifacts:
         path: ~/repo/coverage
         destination: coverage

  run_rubocop:
    steps:
      - run:
          name: run rubocop
          command: bundle exec rubocop

  run_fasterer:
    steps:
      - run:
          name: run fasterer
          command: bundle exec fasterer

  run_bundle_audit:
    steps:
      - run:
          name: run bundle audit
          command: bundle exec bundler-audit check --update

  run_rails_best_practices:
    steps:
      - run:
          name: run rails_best_practices
          command: bundle exec rails_best_practices .
jobs:
  lintering:
    executor: default
    steps:
      - setup_environment:
          environment:
            PGUSER: $PG_USER
            PGPASSWORD: $PG_PASSWORD
            PGDATABASE: $PG_DB
            PGHOST: $PG_HOST
      - run_rubocop
      - run_fasterer
      - run_bundle_audit
      - run_rails_best_practices

  specs:
    executor: default
    parallelism: 2
    steps:
      - setup_environment:
          environment:
            PGUSER: $PG_USER
            PGPASSWORD: $PG_PASSWORD
            PGDATABASE: $PG_DB
            PGHOST: $PG_HOST
      - run_specs

workflows:
  version: 2.1
  build:
    jobs:
      - lintering
      - specs:
          requires:
            - lintering
