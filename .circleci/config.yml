version: 2.1

executors:
  default:
    working_directory: ~/repo
    description: The official CircleCI Ruby Docker image
    docker:
      - image: cimg/ruby:3.1.2-node
#      - image: circleci/postgres:11.3-alpine

caches:
  - &bundle_cache_full v2-repo-{{ checksum "Gemfile.lock" }}
  - &bundle_cache v2-repo-

#environment:
#  DB_USERNAME:
#  DB_PASSWORD:

commands:
  defaults:
    steps:
      - checkout
      - restore_cache:
          keys:
            - *bundle_cache_full
            - *bundle_cache
      - run:
          name: install required gems
          command: bundle install
      - save_cache:
          key: *bundle_cache_full
          paths:
            - vendor/bundle

  run_specs:
    steps:
      - run:
          name: run specs
#          command: bundle exec rspec
          command: |
            mkdir /tmp/test-results
#            TEST_FILES="(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            TEST_FILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --format documentation \
                              --out /tmp/test-results/rspec.xml \
                              $TEST_FILES

  run_rubocop:
    steps:
      - run:
          name: run rubocop
          command: bundle exec rubocop

  run_fasterer:
    steps:
      - run:
          name: run fasterer
          command: bundle exec fasterer

  run_bundle_audit:
    steps:
      - run:
          name: run bundle audit
          command: bundle exec bundler-audit check --update

jobs:
  lintering:
    executor: default
    steps:
      - defaults
      - run_rubocop
      - run_fasterer
      - run_bundle_audit

  specs:
    executor: default
    steps:
      - defaults
      - run_specs

#  database_setup:
#    executor: default
#    steps:
#      - checkout
#      - run:
#          name: Install PostgreSQL
#          command: |
#            sudo apt-get update
#            sudo apt-get install -y postgresql-client
#      - run:
#          name: Create test database
#          command: |
#            cp config/database.yml.ci config/database.yml
#            export RAILS_ENV=test
#            bundle exec rake db:create db:schema:load
#
#  database_teardown:
#    executor: default
#    steps:
#      - run:
#          name: Drop test database
#          command: |
#            export RAILS_ENV=test
#            bundle exec rake db:drop

workflows:
  build:
    jobs:
      - lintering
      - specs
#      - database_setup:
#          requires:
#            - lintering
#      - specs:
#          requires:
#            - database_setup
#          filters:
#            branches:
#              only: master
#      - database_teardown:
#          requires:
#            - specs
